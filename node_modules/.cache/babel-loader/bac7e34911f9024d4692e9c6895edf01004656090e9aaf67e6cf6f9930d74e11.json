{"ast":null,"code":"var _jsxFileName = \"/home/njeri/Desktop/MORINGA/phase-2/week-2-Bot-Battlr-code-challenge/src/BotCollection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport BotCollection from \"./BotCollection\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  useEffect(() => {\n    // Fetch the bots data from the API\n    fetch(\"https://botdata.onrender.com/bots\").then(response => response.json()).then(data => setBots(data)).catch(error => console.error(\"Error fetching bots:\", error));\n  }, []);\n  const enlist = bot => {\n    // Add the bot to the enlistedBots array\n    setEnlistedBots(prevEnlistedBots => [...prevEnlistedBots, bot]);\n  };\n  const release = bot => {\n    // Remove the bot from the enlistedBots array\n    setEnlistedBots(prevEnlistedBots => prevEnlistedBots.filter(enlistedBot => enlistedBot.id !== bot.id));\n  };\n  const discharge = () => {\n    // Clear the enlistedBots array\n    setEnlistedBots([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(BotCollection, {\n      bots: bots,\n      onEnlist: enlist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YourBotArmy, {\n      enlistedBots: enlistedBots,\n      onRelease: release,\n      onDischarge: discharge\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"mePyinjWmuGOqgLLJcRecJpTmIw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BotCollection","YourBotArmy","jsxDEV","_jsxDEV","App","_s","bots","setBots","enlistedBots","setEnlistedBots","fetch","then","response","json","data","catch","error","console","enlist","bot","prevEnlistedBots","release","filter","enlistedBot","id","discharge","className","children","onEnlist","fileName","_jsxFileName","lineNumber","columnNumber","onRelease","onDischarge","_c","$RefreshReg$"],"sources":["/home/njeri/Desktop/MORINGA/phase-2/week-2-Bot-Battlr-code-challenge/src/BotCollection.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport BotCollection from \"./BotCollection\";\nimport YourBotArmy from \"./YourBotArmy\";\n\nconst App = () => {\n  const [bots, setBots] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n\n  useEffect(() => {\n    // Fetch the bots data from the API\n    fetch(\"https://botdata.onrender.com/bots\")\n      .then((response) => response.json())\n      .then((data) => setBots(data))\n      .catch((error) => console.error(\"Error fetching bots:\", error));\n  }, []);\n\n  const enlist = (bot) => {\n    // Add the bot to the enlistedBots array\n    setEnlistedBots((prevEnlistedBots) => [...prevEnlistedBots, bot]);\n  };\n\n  const release = (bot) => {\n    // Remove the bot from the enlistedBots array\n    setEnlistedBots((prevEnlistedBots) =>\n      prevEnlistedBots.filter((enlistedBot) => enlistedBot.id !== bot.id)\n    );\n  };\n\n  const discharge = () => {\n    // Clear the enlistedBots array\n    setEnlistedBots([]);\n  };\n\n  return (\n    <div className=\"app\">\n      <BotCollection bots={bots} onEnlist={enlist} />\n      <YourBotArmy enlistedBots={enlistedBots} onRelease={release} onDischarge={discharge} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd;IACAW,KAAK,CAAC,mCAAmC,CAAC,CACvCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKP,OAAO,CAACO,IAAI,CAAC,CAAC,CAC7BC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,MAAM,GAAIC,GAAG,IAAK;IACtB;IACAV,eAAe,CAAEW,gBAAgB,IAAK,CAAC,GAAGA,gBAAgB,EAAED,GAAG,CAAC,CAAC;EACnE,CAAC;EAED,MAAME,OAAO,GAAIF,GAAG,IAAK;IACvB;IACAV,eAAe,CAAEW,gBAAgB,IAC/BA,gBAAgB,CAACE,MAAM,CAAEC,WAAW,IAAKA,WAAW,CAACC,EAAE,KAAKL,GAAG,CAACK,EAAE,CACpE,CAAC;EACH,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtB;IACAhB,eAAe,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,oBACEN,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBxB,OAAA,CAACH,aAAa;MAACM,IAAI,EAAEA,IAAK;MAACsB,QAAQ,EAAEV;IAAO;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/C7B,OAAA,CAACF,WAAW;MAACO,YAAY,EAAEA,YAAa;MAACyB,SAAS,EAAEZ,OAAQ;MAACa,WAAW,EAAET;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpF,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAnCID,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAqCT,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}