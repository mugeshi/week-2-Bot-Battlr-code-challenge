{"ast":null,"code":"var _jsxFileName = \"/home/njeri/Desktop/MORINGA/phase-2/week-2-Bot-Battlr-code-challenge/src/BotProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BotContext = /*#__PURE__*/createContext();\nexport const useBotContext = () => {\n  _s();\n  const context = useContext(BotContext);\n  if (!context) {\n    throw new Error('useBotContext must be used within a BotProvider');\n  }\n  return context;\n};\n_s(useBotContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst BotProvider = ({\n  children\n}) => {\n  _s2();\n  const [botData, setBotData] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('https://botdata.onrender.com/bots/');\n      setBotData(response.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const enlistBot = bot => {\n    if (!enlistedBots.some(enlistedBot => enlistedBot.bot_class === bot.bot_class)) {\n      setEnlistedBots([...enlistedBots, bot]);\n    }\n  };\n  const releaseBot = bot => {\n    const updatedEnlistedBots = enlistedBots.filter(b => b.id !== bot.id);\n    setEnlistedBots(updatedEnlistedBots);\n  };\n  const dischargeBot = async bot => {\n    try {\n      await axios.delete(`https://botdata.onrender.com/bots/${bot.id}`);\n      releaseBot(bot);\n    } catch (error) {\n      console.error('Error discharging bot:', error);\n    }\n  };\n  const values = {\n    botData,\n    enlistedBots,\n    enlistBot,\n    releaseBot,\n    dischargeBot\n  };\n  return /*#__PURE__*/_jsxDEV(BotContext.Provider, {\n    value: values,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s2(BotProvider, \"Kph4OpSM6T+Df+xgLLeW5cLudtQ=\");\n_c = BotProvider;\nexport default BotProvider;\nvar _c;\n$RefreshReg$(_c, \"BotProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","axios","jsxDEV","_jsxDEV","BotContext","useBotContext","_s","context","Error","BotProvider","children","_s2","botData","setBotData","enlistedBots","setEnlistedBots","fetchData","response","get","data","error","console","enlistBot","bot","some","enlistedBot","bot_class","releaseBot","updatedEnlistedBots","filter","b","id","dischargeBot","delete","values","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/njeri/Desktop/MORINGA/phase-2/week-2-Bot-Battlr-code-challenge/src/BotProvider.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\n\nconst BotContext = createContext();\n\nexport const useBotContext = () => {\n  const context = useContext(BotContext);\n  if (!context) {\n    throw new Error('useBotContext must be used within a BotProvider');\n  }\n  return context;\n};\n\nconst BotProvider = ({ children }) => {\n  const [botData, setBotData] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('https://botdata.onrender.com/bots/');\n      setBotData(response.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const enlistBot = (bot) => {\n    if (!enlistedBots.some((enlistedBot) => enlistedBot.bot_class === bot.bot_class)) {\n      setEnlistedBots([...enlistedBots, bot]);\n    }\n  };\n\n  const releaseBot = (bot) => {\n    const updatedEnlistedBots = enlistedBots.filter((b) => b.id !== bot.id);\n    setEnlistedBots(updatedEnlistedBots);\n  };\n\n  const dischargeBot = async (bot) => {\n    try {\n      await axios.delete(`https://botdata.onrender.com/bots/${bot.id}`);\n      releaseBot(bot);\n    } catch (error) {\n      console.error('Error discharging bot:', error);\n    }\n  };\n\n  const values = {\n    botData,\n    enlistedBots,\n    enlistBot,\n    releaseBot,\n    dischargeBot,\n  };\n\n  return (\n    <BotContext.Provider value={values}>\n      {children}\n    </BotContext.Provider>\n  );\n};\n\nexport default BotProvider;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,gBAAGP,aAAa,CAAC,CAAC;AAElC,OAAO,MAAMQ,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAMC,OAAO,GAAGP,UAAU,CAACI,UAAU,CAAC;EACtC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,iDAAiD,CAAC;EACpE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,aAAa;AAQ1B,MAAMI,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACpC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACdiB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,oCAAoC,CAAC;MACtEL,UAAU,CAACI,QAAQ,CAACE,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAME,SAAS,GAAIC,GAAG,IAAK;IACzB,IAAI,CAACT,YAAY,CAACU,IAAI,CAAEC,WAAW,IAAKA,WAAW,CAACC,SAAS,KAAKH,GAAG,CAACG,SAAS,CAAC,EAAE;MAChFX,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAES,GAAG,CAAC,CAAC;IACzC;EACF,CAAC;EAED,MAAMI,UAAU,GAAIJ,GAAG,IAAK;IAC1B,MAAMK,mBAAmB,GAAGd,YAAY,CAACe,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKR,GAAG,CAACQ,EAAE,CAAC;IACvEhB,eAAe,CAACa,mBAAmB,CAAC;EACtC,CAAC;EAED,MAAMI,YAAY,GAAG,MAAOT,GAAG,IAAK;IAClC,IAAI;MACF,MAAMtB,KAAK,CAACgC,MAAM,CAAE,qCAAoCV,GAAG,CAACQ,EAAG,EAAC,CAAC;MACjEJ,UAAU,CAACJ,GAAG,CAAC;IACjB,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,MAAMc,MAAM,GAAG;IACbtB,OAAO;IACPE,YAAY;IACZQ,SAAS;IACTK,UAAU;IACVK;EACF,CAAC;EAED,oBACE7B,OAAA,CAACC,UAAU,CAAC+B,QAAQ;IAACC,KAAK,EAAEF,MAAO;IAAAxB,QAAA,EAChCA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAE1B,CAAC;AAAC7B,GAAA,CAlDIF,WAAW;AAAAgC,EAAA,GAAXhC,WAAW;AAoDjB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}