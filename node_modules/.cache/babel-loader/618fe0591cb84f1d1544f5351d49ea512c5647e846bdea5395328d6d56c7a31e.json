{"ast":null,"code":"var _jsxFileName = \"/home/njeri/Desktop/MORINGA/phase-2/week-2-Bot-Battlr-code-challenge/src/BotProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BotContext = /*#__PURE__*/createContext();\nexport const useBotContext = () => {\n  _s();\n  const context = React.useContext(BotContext);\n  if (!context) {\n    throw new Error('useBotContext must be used within a BotProvider');\n  }\n  return context;\n};\n_s(useBotContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst BotProvider = ({\n  children\n}) => {\n  _s2();\n  const [botData, setBotData] = useState([]);\n  const fetchData = () => {\n    // Sample bot data\n    const sampleBotData = [{\n      id: 1,\n      name: 'Bot 1',\n      health: 100,\n      damage: 50,\n      armor: 20,\n      bot_class: 'Support',\n      catchphrase: 'Support Bot!',\n      avatar_url: 'avatar1.jpg'\n    }, {\n      id: 2,\n      name: 'Bot 2',\n      health: 80,\n      damage: 70,\n      armor: 10,\n      bot_class: 'Medic',\n      catchphrase: 'I will heal you!',\n      avatar_url: 'avatar2.jpg'\n    }, {\n      id: 3,\n      name: 'Bot 3',\n      health: 120,\n      damage: 40,\n      armor: 30,\n      bot_class: 'Assault',\n      catchphrase: 'I am a fighter!',\n      avatar_url: 'avatar3.jpg'\n    }\n    // Add more sample bot data if needed\n    ];\n\n    setBotData(sampleBotData);\n  };\n\n  // Call fetchData to populate botData when the component mounts\n  React.useEffect(() => {\n    fetchData();\n  }, []);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  const enlistBot = bot => {\n    if (!enlistedBots.some(enlistedBot => enlistedBot.id === bot.id)) {\n      setEnlistedBots([...enlistedBots, bot]);\n    }\n  };\n  const releaseBot = bot => {\n    const updatedEnlistedBots = enlistedBots.filter(b => b.id !== bot.id);\n    setEnlistedBots(updatedEnlistedBots);\n  };\n  const dischargeBot = bot => {\n    setEnlistedBots(prevEnlistedBots => prevEnlistedBots.filter(b => b.id !== bot.id));\n  };\n  const values = {\n    botData,\n    enlistedBots,\n    enlistBot,\n    releaseBot,\n    dischargeBot\n  };\n  return /*#__PURE__*/_jsxDEV(BotContext.Provider, {\n    value: values,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s2(BotProvider, \"VwDX/kWtprJIeiCmn+oNv7m4xoU=\");\n_c = BotProvider;\nexport default BotProvider;\nvar _c;\n$RefreshReg$(_c, \"BotProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","BotContext","useBotContext","_s","context","useContext","Error","BotProvider","children","_s2","botData","setBotData","fetchData","sampleBotData","id","name","health","damage","armor","bot_class","catchphrase","avatar_url","useEffect","enlistedBots","setEnlistedBots","enlistBot","bot","some","enlistedBot","releaseBot","updatedEnlistedBots","filter","b","dischargeBot","prevEnlistedBots","values","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/njeri/Desktop/MORINGA/phase-2/week-2-Bot-Battlr-code-challenge/src/BotProvider.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\n\nconst BotContext = createContext();\n\nexport const useBotContext = () => {\n  const context = React.useContext(BotContext);\n  if (!context) {\n    throw new Error('useBotContext must be used within a BotProvider');\n  }\n  return context;\n};\n\nconst BotProvider = ({ children }) => {\n  const [botData, setBotData] = useState([]);\n\n  const fetchData = () => {\n    // Sample bot data\n    const sampleBotData = [\n      { id: 1, name: 'Bot 1', health: 100, damage: 50, armor: 20, bot_class: 'Support', catchphrase: 'Support Bot!', avatar_url: 'avatar1.jpg' },\n      { id: 2, name: 'Bot 2', health: 80, damage: 70, armor: 10, bot_class: 'Medic', catchphrase: 'I will heal you!', avatar_url: 'avatar2.jpg' },\n      { id: 3, name: 'Bot 3', health: 120, damage: 40, armor: 30, bot_class: 'Assault', catchphrase: 'I am a fighter!', avatar_url: 'avatar3.jpg' },\n      // Add more sample bot data if needed\n    ];\n\n    setBotData(sampleBotData);\n  };\n\n  // Call fetchData to populate botData when the component mounts\n  React.useEffect(() => {\n    fetchData();\n  }, []);\n\n  const [enlistedBots, setEnlistedBots] = useState([]);\n\n  const enlistBot = (bot) => {\n    if (!enlistedBots.some((enlistedBot) => enlistedBot.id === bot.id)) {\n      setEnlistedBots([...enlistedBots, bot]);\n    }\n  };\n\n  const releaseBot = (bot) => {\n    const updatedEnlistedBots = enlistedBots.filter((b) => b.id !== bot.id);\n    setEnlistedBots(updatedEnlistedBots);\n  };\n\n  const dischargeBot = (bot) => {\n    setEnlistedBots((prevEnlistedBots) => prevEnlistedBots.filter((b) => b.id !== bot.id));\n  };\n\n  const values = {\n    botData,\n    enlistedBots,\n    enlistBot,\n    releaseBot,\n    dischargeBot,\n  };\n\n  return (\n    <BotContext.Provider value={values}>\n      {children}\n    </BotContext.Provider>\n  );\n};\n\nexport default BotProvider;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}