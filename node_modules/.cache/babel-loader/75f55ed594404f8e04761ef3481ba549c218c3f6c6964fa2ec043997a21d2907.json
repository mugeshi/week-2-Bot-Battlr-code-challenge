{"ast":null,"code":"var _jsxFileName = \"/home/njeri/Desktop/MORINGA/phase-2/week-2-Bot-Battlr-code-challenge/bot-battlr/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport BotCollection from './BotCollection';\nimport YourBotArmy from './YourBotArmy';\nimport SortBar from './SortBar';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  const [sortKey, setSortKey] = useState('health'); // Default sort key\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('http://localhost:8001/bots');\n      setBots(response.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const handleSort = key => {\n    setSortKey(key);\n  };\n\n  // Function to enlist a bot into the army\n  const enlistBot = bot => {\n    if (!enlistedBots.some(enlistedBot => enlistedBot.bot_class === bot.bot_class)) {\n      setEnlistedBots([...enlistedBots, bot]);\n    }\n  };\n\n  // Function to release a bot from the army\n  const releaseBot = bot => {\n    const updatedEnlistedBots = enlistedBots.filter(b => b.id !== bot.id);\n    setEnlistedBots(updatedEnlistedBots);\n  };\n\n  // Function to discharge a bot from service (delete from backend and from enlistedBots)\n  const dischargeBot = async bot => {\n    try {\n      await axios.delete(`http://localhost:8001/bots/${bot.id}`);\n      releaseBot(bot);\n    } catch (error) {\n      console.error('Error discharging bot:', error);\n    }\n  };\n\n  // Sort the bots array based on the selected sortKey\n  const sortedBots = bots.slice().sort((a, b) => b[sortKey] - a[sortKey]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to Bot Battlr\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SortBar, {\n      handleSort: handleSort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n      bots: sortedBots,\n      enlistBot: enlistBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YourBotArmy, {\n      enlistedBots: enlistedBots,\n      releaseBot: releaseBot,\n      dischargeBot: dischargeBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"5xPh3G9nudDGLMC2U8CPO+rWRtc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","BotCollection","YourBotArmy","SortBar","jsxDEV","_jsxDEV","App","_s","bots","setBots","enlistedBots","setEnlistedBots","sortKey","setSortKey","fetchData","response","get","data","error","console","handleSort","key","enlistBot","bot","some","enlistedBot","bot_class","releaseBot","updatedEnlistedBots","filter","b","id","dischargeBot","delete","sortedBots","slice","sort","a","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/njeri/Desktop/MORINGA/phase-2/week-2-Bot-Battlr-code-challenge/bot-battlr/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport BotCollection from './BotCollection';\nimport YourBotArmy from './YourBotArmy';\nimport SortBar from './SortBar';\nimport './App.css';\n\nconst App = () => {\n  const [bots, setBots] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  const [sortKey, setSortKey] = useState('health'); // Default sort key\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('http://localhost:8001/bots');\n      setBots(response.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const handleSort = (key) => {\n    setSortKey(key);\n  };\n\n  // Function to enlist a bot into the army\n  const enlistBot = (bot) => {\n    if (!enlistedBots.some((enlistedBot) => enlistedBot.bot_class === bot.bot_class)) {\n      setEnlistedBots([...enlistedBots, bot]);\n    }\n  };\n\n  // Function to release a bot from the army\n  const releaseBot = (bot) => {\n    const updatedEnlistedBots = enlistedBots.filter((b) => b.id !== bot.id);\n    setEnlistedBots(updatedEnlistedBots);\n  };\n\n  // Function to discharge a bot from service (delete from backend and from enlistedBots)\n  const dischargeBot = async (bot) => {\n    try {\n      await axios.delete(`http://localhost:8001/bots/${bot.id}`);\n      releaseBot(bot);\n    } catch (error) {\n      console.error('Error discharging bot:', error);\n    }\n  };\n\n  // Sort the bots array based on the selected sortKey\n  const sortedBots = bots.slice().sort((a, b) => b[sortKey] - a[sortKey]);\n\n  return (\n    <div>\n      <h1>Welcome to Bot Battlr</h1>\n      <SortBar handleSort={handleSort} />\n      <BotCollection bots={sortedBots} enlistBot={enlistBot} />\n      <YourBotArmy enlistedBots={enlistedBots} releaseBot={releaseBot} dischargeBot={dischargeBot} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;;EAElDC,SAAS,CAAC,MAAM;IACde,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,4BAA4B,CAAC;MAC9DP,OAAO,CAACM,QAAQ,CAACE,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAME,UAAU,GAAIC,GAAG,IAAK;IAC1BR,UAAU,CAACQ,GAAG,CAAC;EACjB,CAAC;;EAED;EACA,MAAMC,SAAS,GAAIC,GAAG,IAAK;IACzB,IAAI,CAACb,YAAY,CAACc,IAAI,CAAEC,WAAW,IAAKA,WAAW,CAACC,SAAS,KAAKH,GAAG,CAACG,SAAS,CAAC,EAAE;MAChFf,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEa,GAAG,CAAC,CAAC;IACzC;EACF,CAAC;;EAED;EACA,MAAMI,UAAU,GAAIJ,GAAG,IAAK;IAC1B,MAAMK,mBAAmB,GAAGlB,YAAY,CAACmB,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKR,GAAG,CAACQ,EAAE,CAAC;IACvEpB,eAAe,CAACiB,mBAAmB,CAAC;EACtC,CAAC;;EAED;EACA,MAAMI,YAAY,GAAG,MAAOT,GAAG,IAAK;IAClC,IAAI;MACF,MAAMvB,KAAK,CAACiC,MAAM,CAAE,8BAA6BV,GAAG,CAACQ,EAAG,EAAC,CAAC;MAC1DJ,UAAU,CAACJ,GAAG,CAAC;IACjB,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;;EAED;EACA,MAAMgB,UAAU,GAAG1B,IAAI,CAAC2B,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEP,CAAC,KAAKA,CAAC,CAAClB,OAAO,CAAC,GAAGyB,CAAC,CAACzB,OAAO,CAAC,CAAC;EAEvE,oBACEP,OAAA;IAAAiC,QAAA,gBACEjC,OAAA;MAAAiC,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BrC,OAAA,CAACF,OAAO;MAACiB,UAAU,EAAEA;IAAW;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnCrC,OAAA,CAACJ,aAAa;MAACO,IAAI,EAAE0B,UAAW;MAACZ,SAAS,EAAEA;IAAU;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzDrC,OAAA,CAACH,WAAW;MAACQ,YAAY,EAAEA,YAAa;MAACiB,UAAU,EAAEA,UAAW;MAACK,YAAY,EAAEA;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5F,CAAC;AAEV,CAAC;AAACnC,EAAA,CAxDID,GAAG;AAAAqC,EAAA,GAAHrC,GAAG;AA0DT,eAAeA,GAAG;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}