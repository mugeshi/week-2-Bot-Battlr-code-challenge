{"ast":null,"code":"var _jsxFileName = \"/home/njeri/Desktop/MORINGA/phase-2/week-2-Bot-Battlr-code-challenge/src/BotCollection.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport BotCard from './BotCard';\nimport { useBotContext } from './BotProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BotCollection = () => {\n  _s();\n  const {\n    botData\n  } = useBotContext();\n  const [filterClass, setFilterClass] = useState('');\n  const [sortOrder, setSortOrder] = useState('asc');\n  const handleSort = () => {\n    // Implement your sorting logic here\n    // For example, sort by bot name in ascending or descending order\n    const sortedBots = [...botData].sort((a, b) => {\n      if (sortOrder === 'asc') {\n        return a.name.localeCompare(b.name);\n      } else {\n        return b.name.localeCompare(a.name);\n      }\n    });\n    return sortedBots;\n  };\n  const filteredAndSortedBots = () => {\n    const filteredBots = filterClass ? botData.filter(bot => bot.bot_class === filterClass) : botData;\n    return sortOrder ? handleSort(filteredBots) : filteredBots;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Bots\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"filter\",\n        children: \"Filter by Class: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"filter\",\n        onChange: e => setFilterClass(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Support\",\n          children: \"Support\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Medic\",\n          children: \"Medic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Assault\",\n          children: \"Assault\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sort\",\n        children: \"Sort by Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"sort\",\n        onChange: e => setSortOrder(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"asc\",\n          children: \"Ascending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"desc\",\n          children: \"Descending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filteredAndSortedBots().map(bot => /*#__PURE__*/_jsxDEV(BotCard, {\n        bot: bot\n      }, bot.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(BotCollection, \"9ATAKht8/C+/2mQY2dk7x5tYqso=\", false, function () {\n  return [useBotContext];\n});\n_c = BotCollection;\nexport default BotCollection;\nvar _c;\n$RefreshReg$(_c, \"BotCollection\");","map":{"version":3,"names":["React","useState","BotCard","useBotContext","jsxDEV","_jsxDEV","BotCollection","_s","botData","filterClass","setFilterClass","sortOrder","setSortOrder","handleSort","sortedBots","sort","a","b","name","localeCompare","filteredAndSortedBots","filteredBots","filter","bot","bot_class","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","e","target","value","map","_c","$RefreshReg$"],"sources":["/home/njeri/Desktop/MORINGA/phase-2/week-2-Bot-Battlr-code-challenge/src/BotCollection.js"],"sourcesContent":["import React, { useState } from 'react';\nimport BotCard from './BotCard';\nimport { useBotContext } from './BotProvider';\n\nconst BotCollection = () => {\n  const { botData } = useBotContext();\n  const [filterClass, setFilterClass] = useState('');\n  const [sortOrder, setSortOrder] = useState('asc');\n\n  const handleSort = () => {\n    // Implement your sorting logic here\n    // For example, sort by bot name in ascending or descending order\n    const sortedBots = [...botData].sort((a, b) => {\n      if (sortOrder === 'asc') {\n        return a.name.localeCompare(b.name);\n      } else {\n        return b.name.localeCompare(a.name);\n      }\n    });\n\n    return sortedBots;\n  };\n\n  const filteredAndSortedBots = () => {\n    const filteredBots = filterClass\n      ? botData.filter((bot) => bot.bot_class === filterClass)\n      : botData;\n\n    return sortOrder ? handleSort(filteredBots) : filteredBots;\n  };\n\n  return (\n    <div>\n      <h2>Available Bots</h2>\n      <div>\n        <label htmlFor=\"filter\">Filter by Class: </label>\n        <select id=\"filter\" onChange={(e) => setFilterClass(e.target.value)}>\n          <option value=\"\">All</option>\n          <option value=\"Support\">Support</option>\n          <option value=\"Medic\">Medic</option>\n          <option value=\"Assault\">Assault</option>\n        </select>\n      </div>\n      <div>\n        <label htmlFor=\"sort\">Sort by Name: </label>\n        <select id=\"sort\" onChange={(e) => setSortOrder(e.target.value)}>\n          <option value=\"asc\">Ascending</option>\n          <option value=\"desc\">Descending</option>\n        </select>\n      </div>\n      <div>\n        {filteredAndSortedBots().map((bot) => (\n          <BotCard key={bot.id} bot={bot} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default BotCollection;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}